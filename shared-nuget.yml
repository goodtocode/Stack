
trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - src/*

variables:
  sourceDirectory: '$(System.DefaultWorkingDirectory)/src/*'
  artifactDirectory: '$(Build.ArtifactStagingDirectory)/../drop'
  buildVersion: $[ replace(variables['Build.BuildNumber'], '2020', '20.') ]
  version: '5.$(buildVersion)'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
        name: Hosted Windows 2019 with VS2019
        demands: msbuild

    steps:
    - task: PowerShell@2
      inputs:
        filePath: 'deploy/Assembly/Set-Version.ps1'
        arguments: '-Path $(sourceDirectory) -VersionToReplace 5.20.1'
        workingDirectory: '$(sourceDirectory)'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: |
          $(sourceDirectory)/*.csproj
        feedsToUse: config
        nugetConfigPath: .nuget/NuGet.config

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(sourceDirectory)/*.csproj
        arguments: '--configuration $(BuildConfiguration)'
        majorVersion: 5        
        minorVersion: 20
        patchVersion: 2

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: pack
        projects: |
          $(sourceDirectory)/*.csproj
        arguments: '--output $(Build.ArtifactStagingDirectory) --version $(version)'
        majorVersion: 5        
        minorVersion: 20
        patchVersion: 2

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
        name: Hosted Windows 2019 with VS2019
        demands: msbuild

    strategy:
      runOnce:
        deploy:
          steps:          
          - task: NuGetCommand@2
            inputs:
              command: 'push'
              packagesToPush: '$(artifactDirectory)/**/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '525a0dbd-3d6d-4f62-aba4-f4d004295d7d'
              allowPackageConflicts: true
