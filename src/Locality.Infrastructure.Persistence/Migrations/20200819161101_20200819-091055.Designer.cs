// <auto-generated />
using System;
using GoodToCode.Locality.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace GoodToCode.Locality.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(LocalityDbContext))]
    [Migration("20200819161101_20200819-091055")]
    partial class _20200819091055
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoodToCode.Locality.Models.AssociateLocation", b =>
                {
                    b.Property<Guid>("AssociateLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssociateKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationTypeKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssociateLocationKey");

                    b.HasIndex("AssociateKey", "LocationKey")
                        .IsUnique()
                        .HasName("IX_AssociateLocation_All");

                    b.ToTable("AssociateLocation","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.GeoArea", b =>
                {
                    b.Property<Guid>("GeoAreaKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("GeodeticArea")
                        .HasColumnType("geography");

                    b.HasKey("GeoAreaKey");

                    b.HasIndex("GeoAreaKey")
                        .IsUnique()
                        .HasName("IX_GeoArea_Key");

                    b.ToTable("GeoArea","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.Location", b =>
                {
                    b.Property<Guid>("LocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LocationKey");

                    b.HasIndex("LocationKey")
                        .IsUnique();

                    b.ToTable("Location","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.LocationArea", b =>
                {
                    b.Property<Guid>("LocationAreaKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolygonKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LocationAreaKey");

                    b.HasIndex("LocationAreaKey")
                        .IsUnique()
                        .HasName("IX_LocationArea_Key");

                    b.HasIndex("LocationKey")
                        .HasName("IX_LocationArea_LocationId");

                    b.HasIndex("LocationKey", "PolygonKey")
                        .IsUnique()
                        .HasName("IX_LocationArea_All");

                    b.ToTable("LocationArea","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.LocationType", b =>
                {
                    b.Property<Guid>("LocationTypeKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("LocationTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LocationTypeKey");

                    b.HasIndex("LocationTypeKey")
                        .IsUnique()
                        .HasName("IX_LocationType_Key");

                    b.ToTable("LocationType","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.ResourceLocation", b =>
                {
                    b.Property<Guid>("ResourceLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationTypeKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ResourceLocationKey");

                    b.HasIndex("ResourceKey", "LocationKey")
                        .IsUnique()
                        .HasName("IX_ResourceLocation_All");

                    b.ToTable("ResourceLocation","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.VentureLocation", b =>
                {
                    b.Property<Guid>("VentureLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationTypeKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VentureKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VentureLocationKey");

                    b.HasIndex("VentureLocationKey")
                        .IsUnique()
                        .HasName("IX_VentureLocation_Key");

                    b.HasIndex("VentureKey", "LocationKey")
                        .IsUnique()
                        .HasName("IX_VentureLocation_All");

                    b.ToTable("VentureLocation","Locality");
                });
#pragma warning restore 612, 618
        }
    }
}
