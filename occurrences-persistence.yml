trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - deploy/Occurrences.Infrastructure.Persistence/*
    - deploy/Occurrences.Infrastructure.Persistence.Migrations/*

variables:
  workingDirectory: '$(System.DefaultWorkingDirectory)/deploy/Occurrences.Infrastructure.Persistence.Migrations'
  name: 5.$(Year:yy).$(DayOfYear)$(Rev:.rr)
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'  

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
        name: Hosted Windows 2019 with VS2019
        demands: msbuild

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: |
          $(workingDirectory)/*.csproj
        feedsToUse: config
        nugetConfigPath: .nuget/NuGet.config

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: |
          $(workingDirectory)/*.csproj

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        projects: |
          $(workingDirectory)/*.csproj
        arguments: '--output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
        name: Hosted Windows 2019 with VS2019
        demands: msbuild

    strategy:
      runOnce:
        deploy:
          steps:
          - task: CmdLine@2
            inputs:
              script: |                
                ECHO OFF
                set connectionString=%1
                IF %connectionString%.==. set connectionString="Server=tcp:goodtocodestack.database.windows.net,1433;Initial Catalog=StackData;Persist Security Info=False;User ID=LocalAdmin;Password=1202cc89-cb6f-453a-ac7e-550b3b5d2d0c;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
                ECHO ON
                
                Echo ***
                Echo Update database with DbContext (changes and additions, no drops)
                Echo Pre-reqs: 
                Echo   1. IP access to DB. 
                Echo   2. DbContext.cs parameterless constructor 
                Echo   3. .NET Core only, csproj must be TargetFramework-netcoreapp3.1
                
                cd %~dp0
                dotnet tool install --global dotnet-ef
                dotnet tool update --global dotnet-ef
                
                set ConnectionStrings:MyDbConnection=%connectionString%
                
                ECHO OFF
                REM YYYYMMDD-HHMMSS
                set CUR_YYYY=%date:~10,4%
                set CUR_MM=%date:~4,2%
                set CUR_DD=%date:~7,2%
                set CUR_HH=%time:~0,2%
                if %CUR_HH% lss 10 (set CUR_HH=0%time:~1,1%)
                set CUR_NN=%time:~3,2%
                set CUR_SS=%time:~6,2%
                set CUR_MS=%time:~9,2%
                set TimeDate=%CUR_YYYY%%CUR_MM%%CUR_DD%-%CUR_HH%%CUR_NN%%CUR_SS%
                ECHO ON
                
                dotnet ef migrations add %TimeDate% --context ChronologyDbContextDeploy
                dotnet ef database update %TimeDate% --context ChronologyDbContextDeploy
                
                pause
          - task: BatchScript@1
            inputs:
              filename: '$(workingDirectory)/EF-Database-Update.cmd'