// <auto-generated />
using System;
using GoodToCode.Locality.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace GoodToCode.Locality.Infrastructure.Persistence.Migrations.Migrations
{
    [DbContext(typeof(LocalityDbContextDeploy))]
    partial class LocalityDbContextDeployModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoodToCode.Locality.Models.AssociateLocation", b =>
                {
                    b.Property<Guid>("AssociateLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssociateKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationTypeKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssociateLocationKey");

                    b.HasIndex("AssociateKey", "LocationKey")
                        .IsUnique()
                        .HasName("IX_AssociateLocation_All");

                    b.ToTable("AssociateLocation","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.Coordinate", b =>
                {
                    b.Property<Guid>("CoordinateKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("CoordinatePoint")
                        .HasColumnType("geography");

                    b.HasKey("CoordinateKey");

                    b.HasIndex("CoordinateKey")
                        .IsUnique()
                        .HasName("IX_Coordinate_Key");

                    b.ToTable("Coordinate","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.GeoArea", b =>
                {
                    b.Property<Guid>("GeoAreaKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("GeodeticArea")
                        .HasColumnType("geography");

                    b.HasKey("GeoAreaKey");

                    b.HasIndex("GeoAreaKey")
                        .IsUnique()
                        .HasName("IX_GeoArea_Key");

                    b.ToTable("GeoArea","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.GeoDistance", b =>
                {
                    b.Property<Guid>("GeoDistanceKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EndLatLongKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StartLatLongKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GeoDistanceKey");

                    b.HasIndex("GeoDistanceKey")
                        .IsUnique()
                        .HasName("IX_GeoDistance_Key");

                    b.ToTable("GeoDistance","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.GeoLocation", b =>
                {
                    b.Property<Guid>("GeoLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("Elevation")
                        .HasColumnType("geography");

                    b.Property<Guid>("LatLongKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GeoLocationKey");

                    b.HasIndex("GeoLocationKey")
                        .IsUnique()
                        .HasName("IX_GeoLocation_Key");

                    b.ToTable("GeoLocation","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.LatLong", b =>
                {
                    b.Property<Guid>("LatLongKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("LatLongKey");

                    b.HasIndex("LatLongKey")
                        .IsUnique()
                        .HasName("IX_LatLong_Key");

                    b.ToTable("LatLong","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.Line", b =>
                {
                    b.Property<Guid>("LineKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("EndPoint")
                        .HasColumnType("geography");

                    b.Property<Point>("StartPoint")
                        .HasColumnType("geography");

                    b.HasKey("LineKey");

                    b.HasIndex("LineKey")
                        .IsUnique()
                        .HasName("IX_Line_Key");

                    b.ToTable("Line","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.Location", b =>
                {
                    b.Property<Guid>("LocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationDescription")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LocationKey");

                    b.HasIndex("LocationKey")
                        .IsUnique();

                    b.ToTable("Location","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.LocationArea", b =>
                {
                    b.Property<Guid>("LocationAreaKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolygonKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LocationAreaKey");

                    b.HasIndex("LocationAreaKey")
                        .IsUnique()
                        .HasName("IX_LocationArea_Key");

                    b.HasIndex("LocationKey")
                        .HasName("IX_LocationArea_LocationId");

                    b.HasIndex("LocationKey", "PolygonKey")
                        .IsUnique()
                        .HasName("IX_LocationArea_All");

                    b.ToTable("LocationArea","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.LocationType", b =>
                {
                    b.Property<Guid>("LocationTypeKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationTypeDescription")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("LocationTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LocationTypeKey");

                    b.HasIndex("LocationTypeKey")
                        .IsUnique()
                        .HasName("IX_LocationType_Key");

                    b.ToTable("LocationType","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.Polygon", b =>
                {
                    b.Property<Guid>("PolygonKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Geometry>("PolygonSequence")
                        .HasColumnType("geography");

                    b.HasKey("PolygonKey");

                    b.HasIndex("PolygonKey")
                        .IsUnique()
                        .HasName("IX_Polygon_Key");

                    b.ToTable("Polygon","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.ResourceLocation", b =>
                {
                    b.Property<Guid>("ResourceLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationTypeKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ResourceKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ResourceLocationKey");

                    b.HasIndex("ResourceKey", "LocationKey")
                        .IsUnique()
                        .HasName("IX_ResourceLocation_All");

                    b.ToTable("ResourceLocation","Locality");
                });

            modelBuilder.Entity("GoodToCode.Locality.Models.VentureLocation", b =>
                {
                    b.Property<Guid>("VentureLocationKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LocationTypeKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VentureKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VentureLocationKey");

                    b.HasIndex("VentureLocationKey")
                        .IsUnique()
                        .HasName("IX_VentureLocation_Key");

                    b.HasIndex("VentureKey", "LocationKey")
                        .IsUnique()
                        .HasName("IX_VentureLocation_All");

                    b.ToTable("VentureLocation","Locality");
                });
#pragma warning restore 612, 618
        }
    }
}
