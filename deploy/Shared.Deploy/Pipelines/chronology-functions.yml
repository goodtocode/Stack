trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - src/Chronology.Presentation.Functions/*
    - src/Chronology.Domain.Models/*
    - src/Chronology.Presentation.Functions/*
    - src/Shared.Abstractions/*
    - src/Shared.Extensions/*
    - src/Shared.Extensions.Mvc/*
    - src/Shared.Specs/*

variables:
  azureSubscription: '8dbc1bf9-126e-4c82-ab32-bb86e39b6634'
  functionAppName: 'chronology-functions'
  vmImageName: 'vs2017-win2016'
  sourceDirectory: '$(System.DefaultWorkingDirectory)/src/Chronology.Presentation.Functions'
  testDirectory: '$(System.DefaultWorkingDirectory)/src/Chronology.Specs.Unit'
  MSBUILDSINGLELOADCONTEXT: 1

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: PowerShell@2
      displayName: 'Set-Version'
      inputs:
        filePath: 'deploy/Shared.Deploy/Assembly/Set-Version.ps1'
        arguments: '-Path $(System.DefaultWorkingDirectory) -VersionToReplace 5.20.1 -Major 05'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

    - task: DeleteFiles@1
      displayName: 'Delete unwanted projects'
      inputs:
        SourceFolder: $(System.DefaultWorkingDirectory)
        RemoveSourceFolder: true
        contents: |
          /docs/*
          /deploy/*
          /samples/*
          /tests/*

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: 'restore'
        projects: $(sourceDirectory)/*.csproj
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: $(sourceDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      continueOnError: true
      inputs:
        command: test
        projects: '$(testDirectory)/*.csproj'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'